
# Create folder that will host the data and other files
mkdir ~/Downloads/sql_test/
cd ~/Downloads/sql_test
touch .gitignore
echo "data/" >> ./.gitignore

# Create sql folder to host database/table creation scripts
mkdir -p ./sql/

# Append this SQL code to the file sql/init_db.sql to create database/table
echo "


CREATE DATABASE Usersdb;
CREATE USER 'test_user'@'%' IDENTIFIED WITH mysql_native_password BY '123';
GRANT ALL ON Usersdb.* TO 'test_user'@'%';

/* Make sure the privileges are installed */
FLUSH PRIVILEGES;

USE Usersdb;

CREATE TABLE Usersdb.Users (Id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, UserAgent VARCHAR(256) NOT NULL,IP VARCHAR(30) NOT NULL,CanvasId VARCHAR(8),LastVisit DATETIME, Count INT);" >> ./sql/init_db.sql

# Create a MySQL config file to allow to append data
mkdir sql_conf
echo "
[mysqld]
# This just makes sure we can append data from outside the container
local-infile=1
" >> sql_conf/mysql.cnf


# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

#create a volume for the my sql container.To ensure Data persists after my sql container is stopped
volumes:
  datafiles:

services:
  #DataBase Service
  database:
    #Pull the latest mysql image
    image: mysql:8.0.26
    #Map port 3306 on the mysql container to port 3306 in the host
    ports:
      - "3306:3306"
    #Specify where the persisted Data should be stored
    volumes:
       - ./data:/docker-entrypoint-initdb.d/
    restart: always
    #Specify Environment Variables for mysql
    environment:
      MYSQL_ROOT_PASSWORD: Root0++
      MYSQL_USER: newuser
      MYSQL_PASSWORD: M0use!in99
      # MYSQL_DATABASE: Usersdb
  #Api  Service
  api:
    build:
      context: .
      #Use the DockerFile in that Directory
      dockerfile: Dockerfile
    #This Service Depends on the database service specifed above
    depends_on:
      - database
    #Map port 8888 in the docker container to port 80 in the Api
    ports:
         - "80:80"
         - "443:443"
    restart: always
    #Specify Environment Variables for the Api Service
    environment:
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Production
    #  - ASPNETCORE_URLS=http://+:80
