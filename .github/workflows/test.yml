name: CI-CD

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  test_build:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: testdb
      DB_USER: root
      DB_PASSWORD: "root"
      DB_HOST: localhost
      ASPNETCORE_ENVIRONMENT: Development

    steps:

      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE testdb;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot

      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          include-prerelease: true

      - name: Run SQL script
        run: |
          mysql  -uroot -proot < "setup.sql"
      - name: Restore dependencies
        run:  dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Substitue variables in appsetting.json & docker files 
        uses: microsoft/variable-substitution@v1
        with:
         files: './src/MyAPI/appsettings.json, ./src/MyAPI/docker-compose.prod.mysql.yml'
        env:
          Jwt.Key:  ${{ secrets.JWT_KEY }}
          Jwt.Issuer:  ${{ secrets.JWT_ISSUER }}
          ConnectionStrings.MySqlDB: ${{ secrets.CONNECTIONSTRING }}
          services.database.environment.MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          services.database.environment.MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          services.database.environment.MYSQL_USER: ${{ secrets.MYSQL_USER }}
          services.database.environment.MYSQL_DATABASE:  ${{ secrets.MYSQL_DATABASE }}

      - name: Rsync - copy/update files
        uses: up9cloud/action-rsync@v1.1
        env:
            HOST: imgloader.co.uk
            KEY: ${{secrets.PRIVATE_KEY}}
            TARGET: /scp/

            VERBOSE: true
            USER:  ${{ secrets.USERNAME}}
            # PORT: 2222 # no need to set this, because of $SSH_ARGS
            ARGS: -az --exclude=/.git/
            SSH_ARGS: '-p 22 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
            SOURCE: ./src/

            PRE_SCRIPT: |
              echo start at:
              date -u --rfc-3339=ns
            POST_SCRIPT: "echo done at: && date -u --rfc-3339=ns"

      - name: Run docker-compose via SSH
        uses: garygrossgarten/github-action-ssh@2b10f41b5a33808f6d24eafd253296766308b7c4
        with:
          command: |
                cd scp/MyAPI
                docker-compose -f docker-compose.prod.yml up --build -d
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME}}
          privateKey: ${{ secrets.PRIVATE_KEY}}

      - name: Post Deployment tests
        run: |

             CODE=`curl --write-out '%{http_code}' \
                --silent \
                --output /dev/null \
                --request GET \
                --header 'accept: text/plain' \
                --url 'https://imgloader.co.uk/api/Products/1' \

                if [ $CODE!="200" ] 
                then
                    echo "FAILURE"
                else
                    echo "SUCCESS"
                fi


      #- name: Copy files
      #  # Reference a specific commit on action
      #  uses: garygrossgarten/github-action-scp@dba89d858413133b6e35da91a3c989cc8cde3ad4
      #  with:
      #    local: src
      #    remote: scp/
      #    host: ${{ secrets.SSH_HOST }}
      #    username: ${{ secrets.USERNAME}}
      #    privateKey: ${{ secrets.PRIVATE_KEY}}

 

